// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZgloszeniaAwari.Entities;

#nullable disable

namespace ZgloszeniaAwari.Migrations
{
    [DbContext(typeof(ZgloszeniaAwariiDbContext))]
    partial class ZgloszeniaAwariiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ZgloszeniaAwari.Entities.Kategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZgloszenieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Kategorje");
                });

            modelBuilder.Entity("ZgloszeniaAwari.Entities.Osoba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Osoby");
                });

            modelBuilder.Entity("ZgloszeniaAwari.Entities.Zgloszenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDodania")
                        .HasColumnType("datetime2");

                    b.Property<int>("KategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("PrzypisaneDoId")
                        .HasColumnType("int");

                    b.Property<int>("TworcaZgloszeniaId")
                        .HasColumnType("int");

                    b.Property<bool>("Wykonane")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("KategoriaId")
                        .IsUnique();

                    b.HasIndex("PrzypisaneDoId");

                    b.HasIndex("TworcaZgloszeniaId");

                    b.ToTable("Zgloszenia");
                });

            modelBuilder.Entity("ZgloszeniaAwari.Entities.Zgloszenie", b =>
                {
                    b.HasOne("ZgloszeniaAwari.Entities.Kategoria", "Kategoria")
                        .WithOne("Zgloszenie")
                        .HasForeignKey("ZgloszeniaAwari.Entities.Zgloszenie", "KategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZgloszeniaAwari.Entities.Osoba", "PrzypisaneDo")
                        .WithMany("zgloszenia")
                        .HasForeignKey("PrzypisaneDoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZgloszeniaAwari.Entities.Osoba", "TworcaZgloszenia")
                        .WithMany()
                        .HasForeignKey("TworcaZgloszeniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategoria");

                    b.Navigation("PrzypisaneDo");

                    b.Navigation("TworcaZgloszenia");
                });

            modelBuilder.Entity("ZgloszeniaAwari.Entities.Kategoria", b =>
                {
                    b.Navigation("Zgloszenie")
                        .IsRequired();
                });

            modelBuilder.Entity("ZgloszeniaAwari.Entities.Osoba", b =>
                {
                    b.Navigation("zgloszenia");
                });
#pragma warning restore 612, 618
        }
    }
}
